# -*- coding: utf-8 -*-
"""RandomForest_Hyperparameter_Optimization.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mO4sqHGKGKgvSaA9T81A-EZUFIrGa7th
"""

#RandomForest Hyperparameter Optimization
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import RandomizedSearchCV

# Refine hyperparameter space to reduce training time
param_dist = {
    'n_estimators': [80, 100],          # Reduce n_estimators range
    'max_depth': [15],                  # Fix max_depth to 15 for simplicity
    'min_samples_split': [2]            # Use a single value for min_samples_split
}

# Initialize RandomForestClassifier
rfc = RandomForestClassifier(random_state=42, bootstrap=False)  # Disable bootstrap for faster training

# Use RandomizedSearchCV for faster tuning with fewer iterations
random_search = RandomizedSearchCV(estimator=rfc, param_distributions=param_dist,
                                   n_iter=2,       # Reduce iterations to 2 (since combinations are reduced)
                                   cv=2,           # Use cv=2 for quicker evaluation
                                   verbose=1,
                                   random_state=42, n_jobs=-1)

# Fit the model on the training data
random_search.fit(X_train, y_train)

# Output best parameters and score
print(f"Best Parameters: {random_search.best_params_}")
print(f"Best Score: {random_search.best_score_}")