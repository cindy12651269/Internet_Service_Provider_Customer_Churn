# -*- coding: utf-8 -*-
"""XGBoost_Hyperparameter_Optimization.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mO4sqHGKGKgvSaA9T81A-EZUFIrGa7th
"""

#XGBoost Hyperparameter Optimization
import xgboost as xgb
from sklearn.model_selection import GridSearchCV

# Define the XGBoost classifier without 'use_label_encoder' parameter
xgb_model = xgb.XGBClassifier(random_state=42)

# Define a narrower parameter grid for faster tuning
parameters = {
    'max_depth': [5, 10],            # Focus on key depths
    'n_estimators': [50, 100],       # Reduce the range of n_estimators
    'learning_rate': [0.05, 0.1]     # Use a narrower range for learning_rate
}

# Use GridSearchCV to perform hyperparameter tuning
cv = GridSearchCV(xgb_model, parameters, cv=3, n_jobs=-1, verbose=1)
cv.fit(X_train, y_train)

# Check the best parameters and the best score
print(f"Best Parameters: {cv.best_params_}")
print(f"Best Score: {cv.best_score_}")