# -*- coding: utf-8 -*-
"""CatBoost_Hyperparameter_Optimization.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mO4sqHGKGKgvSaA9T81A-EZUFIrGa7th
"""

#CatBoost Hyperparameter Optimization
!pip install catboost
from catboost import CatBoostClassifier

# Define the CatBoost classifier with early stopping for faster convergence
cat_model = CatBoostClassifier(random_state=42,
                               verbose=0,
                               early_stopping_rounds=10)  # Enable early stopping to reduce training time

# Define a narrower parameter grid for efficient hyperparameter tuning
parameters = {
    'depth': [4, 5],                # Slightly adjusted depth range
    'iterations': [50, 80],         # Focused range of iterations for faster search
    'learning_rate': [0.05, 0.1]    # Use common learning rates for faster convergence
}

# Use GridSearchCV to perform hyperparameter tuning with fewer cross-validation folds
cv = GridSearchCV(cat_model, parameters, cv=2, n_jobs=-1, verbose=1)  # Keep cv=2 for efficiency
cv.fit(X_train, y_train)

# Check the best parameters and the best score
print(f"Best Parameters: {cv.best_params_}")
print(f"Best Score: {cv.best_score_}")