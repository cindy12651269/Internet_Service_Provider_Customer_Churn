# -*- coding: utf-8 -*-
"""Train_the_model.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mO4sqHGKGKgvSaA9T81A-EZUFIrGa7th
"""

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import cross_val_score
rfc = RandomForestClassifier(n_estimators=20, random_state=42)
rfc_eval = cross_val_score(estimator = rfc, X = X_train, y = y_train, cv = 5)
display(rfc_eval)

rfc.fit(X_train, y_train)
pred_rfc = rfc.predict(X_test)

#model performance
from sklearn.metrics import classification_report, accuracy_score
print(classification_report(y_test, pred_rfc))

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report

# Replace spaces with underscores in feature names to ensure consistency
X_train.columns = X_train.columns.str.replace(' ', '_')
X_test.columns = X_test.columns.str.replace(' ', '_')

# Scale the data while maintaining the column names
scaler = StandardScaler()
X_train_scaled = pd.DataFrame(scaler.fit_transform(X_train), columns=X_train.columns)
X_test_scaled = pd.DataFrame(scaler.transform(X_test), columns=X_train.columns)  # Use the same column names as the training set

# Train the model and make predictions
clf = LogisticRegression(max_iter=500, random_state=42).fit(X_train_scaled, y_train)
pred_clf = clf.predict(X_test_scaled)

# Print the classification report
print(classification_report(y_test, pred_clf))